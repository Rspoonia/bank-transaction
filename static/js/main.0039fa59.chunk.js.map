{"version":3,"sources":["components/navbar.js","components/allUserDetails.js","components/newUser.js","components/checkBalance.js","components/fundsOperation.js","components/allTransactions.js","components/userOperation.js","data.js","components/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","activeTab","setActiveTab","className","onClick","AllUsersDetail","users","Table","striped","bordered","hover","map","user","index","name","phone","balance","userId","NewUser","newUserHandler","useState","userDetails","setUserDetails","onSubmit","e","required","placeholder","onChange","preventDefault","target","value","type","id","pattern","CheckBalance","selectedUserId","setSelectedUser","showBalance","setShowBalance","selectedUser","filter","disabled","selected","Button","AddFunds","addBalanceHandler","selecctedUser","addNewBalance","setAddNewBalance","selectUserBalance","max","Number","MAX_SAFE_INTEGER","AllTransactions","allTransaction","console","log","length","date","toLocaleString","amount","UserOperation","setUsers","setAllTransaction","newUser","tempData","push","availableIndex","findIndex","parseInt","tempTransaction","tempObj","Date","data","Math","random","WalletsBank","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0039fa59.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navbar = ({ activeTab, setActiveTab }) => {\r\n  return (\r\n    <div className=\"nav-menu\">\r\n      <span\r\n        onClick={() => setActiveTab(\"All-users\")}\r\n        className={activeTab === \"All-users\" ? \"active-tab\" : \"\"}\r\n      >\r\n        All wallets\r\n      </span>\r\n      <span\r\n        onClick={() => setActiveTab(\"New-user\")}\r\n        className={activeTab === \"New-user\" ? \"active-tab\" : \"\"}\r\n      >\r\n        New User\r\n      </span>\r\n      <span\r\n        onClick={() => setActiveTab(\"Balance-check\")}\r\n        className={activeTab === \"Balance-check\" ? \"active-tab\" : \"\"}\r\n      >\r\n        Check Balance\r\n      </span>\r\n      <span\r\n        onClick={() => setActiveTab(\"Add-funds\")}\r\n        className={activeTab === \"Add-funds\" ? \"active-tab\" : \"\"}\r\n      >\r\n        Add Funds\r\n      </span>\r\n      <span\r\n        onClick={() => setActiveTab(\"spend-funds\")}\r\n        className={activeTab === \"spend-funds\" ? \"active-tab\" : \"\"}\r\n      >\r\n        Spend Funds\r\n      </span>\r\n      <span\r\n        onClick={() => setActiveTab(\"All-transaction\")}\r\n        className={activeTab === \"All-transaction\" ? \"active-tab\" : \"\"}\r\n      >\r\n        All Transaction\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\n/**\r\n *\r\n * @param {users} all list of users\r\n * @returns\r\n */\r\nconst AllUsersDetail = ({ users }) => {\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>User Name</th>\r\n          <th>Phone Number</th>\r\n          <th>Balance</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {users.map((user, index) => (\r\n          <tr key={user.userId}>\r\n            <td>{index + 1}</td>\r\n            <td>{user.name}</td>\r\n            <td>{user.phone}</td>\r\n            <td>{user.balance}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default AllUsersDetail;\r\n","import React, { useState } from \"react\";\r\n\r\nconst NewUser = ({ newUserHandler }) => {\r\n  const [userDetails, setUserDetails] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    balance: \"\",\r\n  });\r\n\r\n  return (\r\n    <form\r\n      className=\"flex-column d-flex\"\r\n      onSubmit={(e) => newUserHandler(e, userDetails)}\r\n    >\r\n      <label className=\"new-user-input\">\r\n        Name\r\n        <input\r\n          className=\"border border-primary\"\r\n          required\r\n          placeholder=\"please enter your name\"\r\n          onChange={(e) => {\r\n            e.preventDefault();\r\n            setUserDetails({\r\n              ...userDetails,\r\n              name: e.target.value,\r\n            });\r\n          }}\r\n        />\r\n      </label>\r\n      <label className=\"new-user-input\">\r\n        Phone\r\n        <input\r\n          className=\"border border-primary\"\r\n          type=\"tel\"\r\n          id=\"phone\"\r\n          name=\"phone\"\r\n          required\r\n          placeholder=\"9876543210\"\r\n          pattern=\"[0-9]{10}\"\r\n          onChange={(e) => {\r\n            e.preventDefault();\r\n            setUserDetails({\r\n              ...userDetails,\r\n              phone: e.target.value,\r\n            });\r\n          }}\r\n        />\r\n      </label>\r\n      <label className=\"new-user-input\">\r\n        Amount\r\n        <input\r\n          className=\"border border-primary\"\r\n          type=\"number\"\r\n          required\r\n          placeholder=\"Enter amount how much you want to add\"\r\n          onChange={(e) => {\r\n            e.preventDefault();\r\n            setUserDetails({\r\n              ...userDetails,\r\n              balance: e.target.value,\r\n            });\r\n          }}\r\n        />\r\n      </label>\r\n      <button className=\"bg-primary new-user-submit\" type=\"submit\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewUser;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst CheckBalance = ({ users }) => {\r\n  const [selectedUserId, setSelectedUser] = useState();\r\n  const [showBalance, setShowBalance] = useState(false);\r\n\r\n  const selectedUser = users.filter((user) => user.userId === selectedUserId);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"balance-wrapper\">\r\n        <span>select user</span>\r\n        <select\r\n          onChange={(e) => {\r\n            setSelectedUser(e.target.value);\r\n            setShowBalance(false);\r\n          }}\r\n        >\r\n          <option value=\"\" disabled selected>\r\n            Select a user\r\n          </option>\r\n          {users.map((user) => (\r\n            <option key={user.userId} value={user.userId}>\r\n              {user.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <Button onClick={() => setShowBalance(true)} disabled={!selectedUserId}>\r\n        Check Balance\r\n      </Button>\r\n      {showBalance && (\r\n        <div className=\"user-details\">\r\n          <div>User name: {selectedUser[0].name}</div>\r\n          <div>Available Balance is: {selectedUser[0].balance}</div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckBalance;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst AddFunds = ({ users, addBalanceHandler, activeTab }) => {\r\n  const [selecctedUser, setSelectedUser] = useState();\r\n  const [addNewBalance, setAddNewBalance] = useState();\r\n  const selectUserBalance =\r\n    users.filter((user) => user.userId === selecctedUser)[0]?.balance || 0;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"balance-wrapper\">\r\n        <span>Select user</span>\r\n        <select\r\n          onChange={(e) => {\r\n            setSelectedUser(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"\" disabled selected>\r\n            Select a user\r\n          </option>\r\n          {users.map((user) => (\r\n            <option key={user.userId} value={user.userId}>\r\n              {user.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      Amount\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Enter amount\"\r\n        className=\"new-funds\"\r\n        value={addNewBalance}\r\n        onChange={(e) => setAddNewBalance(e.target.value)}\r\n        max={\r\n          activeTab === \"spend-funds\"\r\n            ? selectUserBalance\r\n            : Number.MAX_SAFE_INTEGER\r\n        }\r\n      />\r\n      <Button\r\n        onClick={() =>\r\n          addBalanceHandler(selecctedUser || users[0].userId, addNewBalance)\r\n        }\r\n      >\r\n        {activeTab === \"Add-funds\" ? \"Add Balance\" : \"Spend Amount\"}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddFunds;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nconst AllTransactions = ({ allTransaction }) => {\r\n  console.log(\"all tra\", allTransaction);\r\n  return (\r\n    <>\r\n      {allTransaction.length === 0 ? (\r\n        <div>Oop's there is no transaction history</div>\r\n      ) : (\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>User Name</th>\r\n              <th>Transaction Date</th>\r\n              <th>Transaction Amount</th>\r\n              <th>Balance</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {allTransaction.map((user, index) => (\r\n              <tr key={user.name + user.balance}>\r\n                <td>{index + 1}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.date.toLocaleString()}</td>\r\n                <td>{user.amount}</td>\r\n                <td>{user.balance}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllTransactions;\r\n","import React, { useState } from \"react\";\r\nimport AllUsersDetail from \"./allUserDetails\";\r\nimport NewUser from \"./newUser\";\r\nimport CheckBalance from \"./checkBalance\";\r\nimport AddFunds from \"./fundsOperation\";\r\nimport AllTransactions from \"./allTransactions\";\r\n\r\nconst UserOperation = ({ users, activeTab, setUsers, setActiveTab }) => {\r\n  // for maintain users transaction details\r\n  const [allTransaction, setAllTransaction] = useState([]);\r\n  // TODO: needs to add popup modal for confirmation\r\n  const newUserHandler = (e, newUser) => {\r\n    e.preventDefault();\r\n    const tempData = [...users];\r\n    newUser.userId = \"usr\" + (tempData.length + 1);\r\n    tempData.push(newUser);\r\n    setUsers(tempData);\r\n    setActiveTab(\"All-users\");\r\n  };\r\n  const addBalanceHandler = (userId, amount) => {\r\n    const tempData = [...users];\r\n    const availableIndex =\r\n      tempData.findIndex((user) => user.userId === userId) || 0;\r\n    tempData[availableIndex].balance =\r\n      parseInt(tempData[availableIndex].balance) + parseInt(amount);\r\n    setUsers(tempData);\r\n    setActiveTab(\"All-users\");\r\n    // for create transaction history\r\n    const tempTransaction = [...allTransaction];\r\n    const tempObj = {\r\n      name: tempData[availableIndex].name,\r\n      date: new Date(),\r\n      amount: \"+\" + parseInt(amount),\r\n      balance: tempData[availableIndex].balance,\r\n    };\r\n    tempTransaction.push(tempObj);\r\n    setAllTransaction(tempTransaction);\r\n  };\r\n  const spendBalanceHandler = (userId, amount) => {\r\n    const tempData = [...users];\r\n    const availableIndex =\r\n      tempData.findIndex((user) => user.userId === userId) || 0;\r\n    tempData[availableIndex].balance =\r\n      parseInt(tempData[availableIndex].balance) - parseInt(amount);\r\n    setUsers(tempData);\r\n    setActiveTab(\"All-users\");\r\n    const tempTransaction = [...allTransaction];\r\n    const tempObj = {\r\n      name: tempData[availableIndex].name,\r\n      date: new Date(),\r\n      amount: parseInt(amount) * -1,\r\n      balance: tempData[availableIndex].balance,\r\n    };\r\n    tempTransaction.push(tempObj);\r\n    setAllTransaction(tempTransaction);\r\n  };\r\n\r\n  return (\r\n    <section className=\"detail-wrapper\">\r\n      {activeTab === \"All-users\" && <AllUsersDetail users={users} />}\r\n      {activeTab === \"New-user\" && <NewUser newUserHandler={newUserHandler} />}\r\n      {activeTab === \"Balance-check\" && <CheckBalance users={users} />}\r\n      {(activeTab === \"Add-funds\" || activeTab === \"spend-funds\") && (\r\n        <AddFunds\r\n          users={users}\r\n          addBalanceHandler={\r\n            activeTab === \"Add-funds\" ? addBalanceHandler : spendBalanceHandler\r\n          }\r\n          activeTab={activeTab}\r\n        />\r\n      )}\r\n      {activeTab === \"All-transaction\" && (\r\n        <AllTransactions allTransaction={allTransaction} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default UserOperation;\r\n","export const data = [\r\n  {\r\n    userId: \"usr1\",\r\n    name: \"Lucky Rai\",\r\n    balance: parseInt(Math.random() * 1000),\r\n    phone: 8555672972,\r\n  },\r\n  {\r\n    userId: \"usr2\",\r\n    name: \"Anand kumar\",\r\n    balance: parseInt(Math.random() * 1000),\r\n    phone: 7555804115,\r\n  },\r\n  {\r\n    userId: \"usr3\",\r\n    name: \"Manish Kumar\",\r\n    balance: parseInt(Math.random() * 1000),\r\n    phone: 9455595741,\r\n  },\r\n  {\r\n    userId: \"usr4\",\r\n    name: \"Ankit Kumar\",\r\n    balance: parseInt(Math.random() * 1000),\r\n    phone: 8555808557,\r\n  },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport Navbar from \"./navbar\";\r\nimport UserOperation from \"./userOperation\";\r\nimport \"./style.css\";\r\nimport { data } from \"../data\";\r\n\r\nconst WalletsBank = () => {\r\n  const [users, setUsers] = useState([...data]);\r\n  const [activeTab, setActiveTab] = useState(\"All-users\");\r\n  return (\r\n    <section>\r\n      <h2 className=\"main-content\">welcome to bank</h2>\r\n      <div className=\"wrapper\">\r\n        <Navbar activeTab={activeTab} setActiveTab={setActiveTab} />\r\n        <UserOperation\r\n          users={users}\r\n          setUsers={setUsers}\r\n          activeTab={activeTab}\r\n          setActiveTab={setActiveTab}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default WalletsBank;\r\n","import WalletsBank from \"./components\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WalletsBank />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}